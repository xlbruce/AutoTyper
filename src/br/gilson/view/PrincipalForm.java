package br.gilson.view;

import br.gilson.controller.AutoTyper;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ContainerEvent;
import java.awt.event.ContainerListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author bruce
 */
public class PrincipalForm extends javax.swing.JFrame implements KeyListener,
        ContainerListener {

    /**
     * Creates new form PrincipalForm
     */
    public PrincipalForm() {
        setFocusable(true);
        setTitle("Auto Typer");
        addKeyListener(this);
        initComponents();
        setResizable(false);
        //Adiciona as checkboxes no arraylist
        checkBoxes = new ArrayList<>();
        checkBoxes.add(jCheckBoxF1);
        checkBoxes.add(jCheckBoxF2);
        checkBoxes.add(jCheckBoxF3);
        checkBoxes.add(jCheckBoxF4);
        checkBoxes.add(jCheckBoxF5);
        checkBoxes.add(jCheckBoxF6);
        checkBoxes.add(jCheckBoxF7);
        checkBoxes.add(jCheckBoxF8);
        checkBoxes.add(jCheckBoxF9);
        checkBoxes.add(jCheckBoxF10);
        checkBoxes.add(jCheckBoxF11);
        checkBoxes.add(jCheckBoxF12);

        //Ajusta o frame no centro da tela
        tela = Toolkit.getDefaultToolkit().getScreenSize();
        tamanhoFrame = getSize();
        setBounds((tela.width / 2) - (tamanhoFrame.width / 2),
                (tela.height / 2) - (tamanhoFrame.height / 2),
                tamanhoFrame.width, tamanhoFrame.height);

        //Listener
        addKeyAndContainerListenerRecursively(this);
        //Gambi para ativar o listener
        this.jButtonLimpar.requestFocus();
    }

    //Adiciona um listener global
    private void addKeyAndContainerListenerRecursively(Component c) {
        try {
            c.addKeyListener(this);
            if (c instanceof Container) {
                Container cont = (Container) c;
                cont.addContainerListener((ContainerListener) this);
                Component[] children = cont.getComponents();
                for (Component children1 : children) {
                    addKeyAndContainerListenerRecursively(children1);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxF1 = new javax.swing.JCheckBox();
        jCheckBoxF2 = new javax.swing.JCheckBox();
        jCheckBoxF3 = new javax.swing.JCheckBox();
        jCheckBoxF4 = new javax.swing.JCheckBox();
        jCheckBoxF5 = new javax.swing.JCheckBox();
        jCheckBoxF6 = new javax.swing.JCheckBox();
        jCheckBoxF7 = new javax.swing.JCheckBox();
        jCheckBoxF8 = new javax.swing.JCheckBox();
        jCheckBoxF9 = new javax.swing.JCheckBox();
        jCheckBoxF10 = new javax.swing.JCheckBox();
        jCheckBoxF11 = new javax.swing.JCheckBox();
        jCheckBoxF12 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIniciarEm = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDelay = new javax.swing.JTextField();
        jToggleButtonIniciar = new javax.swing.JToggleButton();
        jButtonLimpar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuAjuda = new javax.swing.JMenu();
        jMenuSobre = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBoxF1.setText("F1");

        jCheckBoxF2.setText("F2");

        jCheckBoxF3.setText("F3");

        jCheckBoxF4.setText("F4");

        jCheckBoxF5.setText("F5");

        jCheckBoxF6.setText("F6");

        jCheckBoxF7.setText("F7");

        jCheckBoxF8.setText("F8");

        jCheckBoxF9.setText("F9");

        jCheckBoxF10.setText("F10");

        jCheckBoxF11.setText("F11");

        jCheckBoxF12.setText("F12");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Iniciar em");
        jLabel1.setToolTipText("1000 milissegundos = 1 segundo");

        jTextFieldIniciarEm.setToolTipText("1000 milissegundos = 1 segundo");
        jTextFieldIniciarEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIniciarEmActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("segundos");
        jLabel2.setToolTipText("1000 milissegundos = 1 segundo");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Delay das teclas");
        jLabel3.setToolTipText("1000 milissegundos = 1 segundo");

        jTextFieldDelay.setToolTipText("1000 milissegundos = 1 segundo");

        jToggleButtonIniciar.setText("Iniciar");
        jToggleButtonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonIniciarActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("em milissegundos");
        jLabel4.setToolTipText("1000 milissegundos = 1 segundo");

        jMenuAjuda.setText("Ajuda");
        jMenuAjuda.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenuAjudaMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        jMenuBar1.add(jMenuAjuda);

        jMenuSobre.setText("Sobre");
        jMenuSobre.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenuSobreMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        jMenuBar1.add(jMenuSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxF4)
                            .addComponent(jCheckBoxF3)
                            .addComponent(jCheckBoxF2)
                            .addComponent(jCheckBoxF1))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxF8)
                            .addComponent(jCheckBoxF7)
                            .addComponent(jCheckBoxF6)
                            .addComponent(jCheckBoxF5))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxF12)
                            .addComponent(jCheckBoxF11)
                            .addComponent(jCheckBoxF10)
                            .addComponent(jCheckBoxF9)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jToggleButtonIniciar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonLimpar))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldIniciarEm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4))
                                    .addComponent(jLabel2))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxF1)
                    .addComponent(jCheckBoxF5)
                    .addComponent(jCheckBoxF9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxF2)
                    .addComponent(jCheckBoxF6)
                    .addComponent(jCheckBoxF10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxF3)
                    .addComponent(jCheckBoxF7)
                    .addComponent(jCheckBoxF11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxF4)
                    .addComponent(jCheckBoxF8)
                    .addComponent(jCheckBoxF12))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIniciarEm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonIniciar)
                    .addComponent(jButtonLimpar))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonIniciarActionPerformed

        this.jToggleButtonIniciar.setFocusable(false);
        if (this.jToggleButtonIniciar.isSelected()) {
            this.jToggleButtonIniciar.setText("Parar ");
            //Verifica quais boxes estão tickadas
            ArrayList<String> checadas = new ArrayList<>();
            for (JCheckBox checkBoxe : checkBoxes) {
                if (checkBoxe.isSelected()) {
                    checadas.add(checkBoxe.getText());
                }
            }
            int delay, iniciarEm;
            try {
                //Os valores são convertidos para segundos
                delay = Integer.parseInt(jTextFieldDelay.getText());
                iniciarEm = Integer.parseInt(jTextFieldIniciarEm.getText()) * 1000;
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Insira um número válido");
                this.jToggleButtonIniciar.setSelected(false);
                this.jToggleButtonIniciar.setText("Iniciar");
                return;
            }
            //Verifica se os valores inseridos são positivos
            if (delay < 0 || iniciarEm < 0) {
                JOptionPane.showMessageDialog(this, "Por favor, insira valores acima de 0");
                return;
            }
            //Inicia o auto-typer das teclas selecionadas
            AutoTyper.start(checadas, iniciarEm, delay);
        } else {
            this.jToggleButtonIniciar.setText("Iniciar");
            AutoTyper.stop();
        }
    }//GEN-LAST:event_jToggleButtonIniciarActionPerformed

    private void jTextFieldIniciarEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIniciarEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIniciarEmActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jMenuSobreMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenuSobreMenuSelected

        SobreDialog sobre = new SobreDialog(this, rootPaneCheckingEnabled);
        Dimension tamanhoDialog = sobre.getSize();
        sobre.setBounds(((tela.width / 2) - (tamanhoDialog.width / 2)) + 50,
                (tela.height / 2) - (tamanhoDialog.height / 2),
                tamanhoDialog.width, tamanhoDialog.height);
        sobre.setResizable(false);
        sobre.setVisible(true);
    }//GEN-LAST:event_jMenuSobreMenuSelected

    private void jMenuAjudaMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenuAjudaMenuSelected
        AjudaDialog ajuda = new AjudaDialog(this, rootPaneCheckingEnabled);
         Dimension tamanhoDialog = ajuda.getSize();
         ajuda.setBounds(((tela.width / 2) - (tamanhoDialog.width / 2)) + 50,
         (tela.height / 2) - (tamanhoDialog.height / 2),
         tamanhoDialog.width, tamanhoDialog.height);
         ajuda.setResizable(false);
         ajuda.setVisible(true);
    }//GEN-LAST:event_jMenuAjudaMenuSelected
    private void limpar() {
        for (JCheckBox checkBox : checkBoxes) {
            checkBox.setSelected(false);
            this.jTextFieldDelay.setText("");
            this.jTextFieldIniciarEm.setText("");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalForm().setVisible(true);

            }
        });
    }
    private Dimension tamanhoFrame;
    private Dimension tela;
    private final ArrayList<JCheckBox> checkBoxes;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JCheckBox jCheckBoxF1;
    private javax.swing.JCheckBox jCheckBoxF10;
    private javax.swing.JCheckBox jCheckBoxF11;
    private javax.swing.JCheckBox jCheckBoxF12;
    private javax.swing.JCheckBox jCheckBoxF2;
    private javax.swing.JCheckBox jCheckBoxF3;
    private javax.swing.JCheckBox jCheckBoxF4;
    private javax.swing.JCheckBox jCheckBoxF5;
    private javax.swing.JCheckBox jCheckBoxF6;
    private javax.swing.JCheckBox jCheckBoxF7;
    private javax.swing.JCheckBox jCheckBoxF8;
    private javax.swing.JCheckBox jCheckBoxF9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenuAjuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuSobre;
    private javax.swing.JTextField jTextFieldDelay;
    private javax.swing.JTextField jTextFieldIniciarEm;
    private javax.swing.JToggleButton jToggleButtonIniciar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
        //Atalho para selecionar as teclas (somente se o botão iniciar
        //estiver desativado
        if (!this.jToggleButtonIniciar.isSelected()) {
            int code = e.getKeyCode();
            switch (code) {
                //F1
                case 112:
                    if (this.jCheckBoxF1.isSelected()) {
                        this.jCheckBoxF1.setSelected(false);
                    } else {
                        this.jCheckBoxF1.setSelected(true);
                    }
                    break;
                //F2
                case 113:
                    if (this.jCheckBoxF2.isSelected()) {
                        this.jCheckBoxF2.setSelected(false);
                    } else {
                        this.jCheckBoxF2.setSelected(true);
                    }
                    break;
                //F3
                case 114:
                    if (this.jCheckBoxF3.isSelected()) {
                        this.jCheckBoxF3.setSelected(false);
                    } else {
                        this.jCheckBoxF3.setSelected(true);
                    }
                    break;
                //F4
                case 115:
                    if (this.jCheckBoxF4.isSelected()) {
                        this.jCheckBoxF4.setSelected(false);
                    } else {
                        this.jCheckBoxF4.setSelected(true);
                    }
                    break;
                //F5
                case 116:
                    if (this.jCheckBoxF5.isSelected()) {
                        this.jCheckBoxF5.setSelected(false);
                    } else {
                        this.jCheckBoxF5.setSelected(true);
                    }
                    break;
                //F6
                case 117:
                    if (this.jCheckBoxF6.isSelected()) {
                        this.jCheckBoxF6.setSelected(false);
                    } else {
                        this.jCheckBoxF6.setSelected(true);
                    }
                    break;
                //F7
                case 118:
                    if (this.jCheckBoxF7.isSelected()) {
                        this.jCheckBoxF7.setSelected(false);
                    } else {
                        this.jCheckBoxF7.setSelected(true);
                    }
                    break;
                //F8
                case 119:
                    if (this.jCheckBoxF8.isSelected()) {
                        this.jCheckBoxF8.setSelected(false);
                    } else {
                        this.jCheckBoxF8.setSelected(true);
                    }
                    break;
                //F9
                case 120:
                    if (this.jCheckBoxF9.isSelected()) {
                        this.jCheckBoxF9.setSelected(false);
                    } else {
                        this.jCheckBoxF9.setSelected(true);
                    }
                    break;
                //F10
                case 121:
                    if (this.jCheckBoxF10.isSelected()) {
                        this.jCheckBoxF10.setSelected(false);
                    } else {
                        this.jCheckBoxF10.setSelected(true);
                    }
                    break;
                //F11
                case 122:
                    if (this.jCheckBoxF11.isSelected()) {
                        this.jCheckBoxF11.setSelected(false);
                    } else {
                        this.jCheckBoxF11.setSelected(true);
                    }
                    break;
                //F12
                case 123:
                    if (this.jCheckBoxF12.isSelected()) {
                        this.jCheckBoxF12.setSelected(false);
                    } else {
                        this.jCheckBoxF12.setSelected(true);
                    }
                    break;
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

    @Override
    public void componentAdded(ContainerEvent e) {

    }

    @Override
    public void componentRemoved(ContainerEvent e) {

    }
}
